name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  test-and-quality:
    name: 🧪 Test and Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Install Node.js dependencies
        run: npm ci

      - name: 🐍 Setup Python environment and dependencies
        run: |
          # Make the install script executable
          chmod +x scripts/install-python-deps.sh
          
          # Create virtual environment and install Python dependencies
          python3 -m venv venv
          source venv/bin/activate
          
          # Upgrade pip
          pip install --upgrade pip
          
          # Install Python dependencies
          pip install -r scripts/requirements.txt
          
          # Verify installations
          python -c "import pdfplumber; print('✅ pdfplumber OK')"
          python -c "import spacy; print('✅ spaCy OK')" || echo "⚠️ spaCy installed but French model may not be available"

      - name: 🔍 Type checking
        run: npm run type-check

      - name: 🧹 Lint code
        run: npm run lint

      - name: 🧪 Run unit tests with coverage
        run: npm run test:coverage

      - name: 🔧 Run integration tests
        run: npm test -- --testPathPattern=tests/integration

      - name: 🧪 Run CV flow validation test
        run: node scripts/test-cv-flow.js

      - name: 🐍 Test Python PDF parsers
        run: |
          source venv/bin/activate
          
          # Test that parsers can show help (validates they're working)
          python scripts/pdf_parser.py --help
          python scripts/pdf_parser_improved.py --help
          
          # Test imports work correctly
          python -c "
          import sys
          sys.path.append('scripts')
          try:
              from pdf_parser import CVParser
              from pdf_parser_improved import CVParser as CVParserImproved
              print('✅ Python parsers import successfully')
          except ImportError as e:
              print(f'❌ Import error: {e}')
              sys.exit(1)
          "
          
          # If test CV is available, try parsing it
          if [ -f "CV_NGUYEN_Ngoc_Linh_Nhi_FullStack.pdf" ]; then
            echo "🧪 Testing with sample CV..."
            python scripts/pdf_parser.py CV_NGUYEN_Ngoc_Linh_Nhi_FullStack.pdf > /dev/null
            if [ $? -eq 0 ]; then
              echo "✅ PDF parser test successful"
            else
              echo "⚠️ PDF parser test had issues but continuing..."
            fi
          else
            echo "ℹ️ No test CV found, skipping parser test"
          fi

      - name: 🏗️ Build Next.js application
        run: npm run build

      - name: 📊 Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  validate-project-structure:
    name: 📁 Validate Project Structure
    runs-on: ubuntu-latest
    needs: test-and-quality
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Comprehensive project validation
        run: |
          echo "🧪 Running comprehensive CV Genius flow validation..."
          node scripts/test-cv-flow.js
          
          echo ""
          echo "📊 Project validation summary:"
          echo "✅ Dependencies checked"
          echo "✅ File structure validated"
          echo "✅ Configuration requirements listed"
          echo "✅ CV flow components verified"
